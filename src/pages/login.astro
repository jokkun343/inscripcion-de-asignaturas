---
const RE_RUT = /^(\d{1,3}(?:\.\d{1,3}){2}-[\dkK])$/;

function IsRUTInvalid(rut: FormDataEntryValue | null): boolean {
  if (rut == null) return false;
  let isValid = false;

  if (!RE_RUT.test(rut.toString())){
    isValid = true;
  }

  return isValid;
}

const errors = { rut: "", password: "" };
if (Astro.request.method === "POST") {
  try {
    const data = await Astro.request.formData();
    const rut = data.get("rut");
    const password = data.get("password");
    
    if (IsRUTInvalid(rut)){
      errors.rut += "El RUT ingresado no es válido."
    }

    const hasErrors = Object.values(errors).some(msg => msg)
    if (!hasErrors) {
      return Astro.redirect("/login");
    }

  } catch (error) {
    if (error instanceof Error) {
      console.error(error.message);
    }
  }
}
---

<div>
  <form method="POST">
    <p>RUT <input required type="text" name="rut"/></p>
    {errors.rut && <p>{errors.rut}</p>}
    <p>Contraseña <input required minlength="8" type="password" name="password"/></p>
    {errors.password && <p>{errors.password}</p>}
    <button type="submit">Ingresar</button>
  </form>
</div>

<style>
  input{border: 1px solid red;}
</style>